{"version":3,"file":"blocks.js","mappings":"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","sources":["webpack:///./controller/fetch-notifications.js","webpack:///./view/block_notification-list.js","webpack:///./view/frontend_notification-list.js","webpack:///./view/notification-element.js","webpack:///external window \"React\"","webpack:///external window [\"wp\",\"i18n\"]","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object"],"sourcesContent":["export async function fetchNotifications() {\n    try {\n        const response = await fetch('/wp-json/unskippable-notif/v1/notifications/', {\n            headers: {\n                'X-WP-Nonce': notificationData.nonce\n            }\n        });\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching notifications:', error);\n        return [];\n    }\n}","import { __ } from \"@wordpress/i18n\";\nimport { buildNotificationList } from \"./frontend_notification-list\";\n\nconst { registerBlockType } = wp.blocks;\n\nregisterBlockType('plugin/notification-block', {\n    title: 'Notification List',\n    icon: 'megaphone', // Use a WordPress Dashicon or custom SVG\n    category: 'layout',\n    edit: function (props) {\n        // This is where you define the editor interface\n        return (\n            <>\n                <h2>{__('Current Notifications', 'unskippable-notifications')}</h2>\n                <div class=\"mode--light unskippable-notif__list-block\" className={props.className}>\n                    <div id=\"unskippable-notif__list\">\n                        <p>{__('A list of all notifications will be displayed here.', 'unskippable-notifications')}</p>\n                    </div>\n                </div>\n            </>\n        );\n    },\n    save: function (props) {\n        // This is what gets saved and output on the frontend\n        return (\n            <>\n                <h2>{__('Current Notifications', 'unskippable-notifications')}</h2>\n                <div class=\"mode--light unskippable-notif__list-block\" className={props.className}>\n                    <div id=\"unskippable-notif__list\">\n                        <div class=\"unskippable-notif__loading-message\">{__('Loading Notifications...', 'unskippable-notifications')}</div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n});\n\nbuildNotificationList(\"unskippable-notif__list\");","import { createNotificationElement } from \"./notification-element\";\nimport { fetchNotifications } from \"../controller/fetch-notifications\";\n\nexport function buildNotificationList(listID) {\n    listID = document.getElementById(listID)\n    fetchNotifications().then(data => {\n        data.forEach(function(notification) {\n            var notificationElement = createNotificationElement(notification);\n            listID.appendChild(notificationElement.cloneNode(true));\n        });\n    });\n};","export function createNotificationElement(notification) {\n    let containerDiv = document.createElement('div');\n    containerDiv.classList.add('unskippable-notif__notification');\n\n    let title = document.createElement('h3');\n    title.classList.add('unskippable-notif_notification__title');\n    title.textContent = notification.title;\n\n    let content = document.createElement('div');\n    content.classList.add('unskippable-notif_notification__content');\n    content.innerHTML = notification.content;\n\n    containerDiv.appendChild(title);\n    containerDiv.appendChild(content);\n\n    return containerDiv;\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["fetchNotifications","response","fetch","headers","notificationData","nonce","json","error","console","__","buildNotificationList","registerBlockType","wp","blocks","title","icon","category","edit","props","createElement","Fragment","class","className","id","save","createNotificationElement","listID","document","getElementById","then","data","forEach","notification","notificationElement","appendChild","cloneNode","containerDiv","classList","add","textContent","content","innerHTML"],"sourceRoot":""}